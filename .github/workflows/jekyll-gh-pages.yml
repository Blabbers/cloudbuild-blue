# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ./_site
      - name: List artifacts after upload
        run: |
          echo "Artifacts after upload:"
          ls -R ./_site
      - name: List uploaded artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Uploaded artifacts:"
          gh api -H "Accept: application/vnd.github.v3+json" /repos/${{ github.repository }}/actions/artifacts

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./_site
      - name: List artifacts before deployment
        run: |
          echo "Artifacts before deployment:"
          ls -R ./_site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get last commit message
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "LAST_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Send Discord notification on success
        if: success()
        run: |
          DISCORD_MESSAGE='{
            "content": "\n> :white_check_mark: **Build finished successfully!** :sparkles: \n> https://blabbers.games/web-builds/\n> \n> :speech_balloon: ***'"$LAST_COMMIT_MESSAGE"'***"
          }'
          curl -X POST -H "Content-Type: application/json" -d "$DISCORD_MESSAGE" ${{ secrets.DISCORD_WEBHOOK_URL_LLBUILDS_CHANNEL }}

      - name: Send Discord notification on failure
        if: failure()
        run: |
          DISCORD_MESSAGE='{
            "content": "\n> :x: **Build failed!** :boom: \n> \n> :speech_balloon: ***'"$LAST_COMMIT_MESSAGE"'***"
          }'
          curl -X POST -H "Content-Type: application/json" -d "$DISCORD_MESSAGE" ${{ secrets.DISCORD_WEBHOOK_URL_LLBUILDS_CHANNEL }}
